// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoxControl.Connect.Models.Entities;
using MoxControl.Connect.Proxmox.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MoxControl.Connect.Proxmox.Data.Migrations
{
    [DbContext(typeof(ConnectProxmoxDbContext))]
    [Migration("20230523120105_AddRealmFieldProxmoxServersTable")]
    partial class AddRealmFieldProxmoxServersTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("connect_proxmox")
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MoxControl.Connect.Proxmox.Models.Entities.ProxmoxMachine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CPUCores")
                        .HasColumnType("integer");

                    b.Property<int>("CPUSockets")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("HDDSize")
                        .HasColumnType("integer");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ProxmoxId")
                        .HasColumnType("integer");

                    b.Property<string>("ProxmoxName")
                        .HasColumnType("text");

                    b.Property<int>("RAMSize")
                        .HasColumnType("integer");

                    b.Property<long>("ServerId")
                        .HasColumnType("bigint");

                    b.Property<int>("Stage")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<long?>("TemplateId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ServerId");

                    b.ToTable("ProxmoxMachines", "connect_proxmox");
                });

            modelBuilder.Entity("MoxControl.Connect.Proxmox.Models.Entities.ProxmoxServer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("AuthorizationType")
                        .HasColumnType("integer");

                    b.Property<string>("BaseNode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BaseStorage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<ImageData>("ImageData")
                        .HasColumnType("jsonb");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Port")
                        .HasColumnType("integer");

                    b.Property<string>("Realm")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RootLogin")
                        .HasColumnType("text");

                    b.Property<string>("RootPassword")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<TemplateData>("TemplateData")
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("VirtualizationSystem")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ProxmoxServers", "connect_proxmox");
                });

            modelBuilder.Entity("MoxControl.Connect.Proxmox.Models.Entities.TemplateMachine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CPUCores")
                        .HasColumnType("integer");

                    b.Property<int>("CPUSockets")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("HDDSize")
                        .HasColumnType("integer");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ProxmoxId")
                        .HasColumnType("integer");

                    b.Property<string>("ProxmoxName")
                        .HasColumnType("text");

                    b.Property<int>("RAMSize")
                        .HasColumnType("integer");

                    b.Property<long>("ServerId")
                        .HasColumnType("bigint");

                    b.Property<int>("Stage")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<long?>("TemplateId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ServerId");

                    b.ToTable("TemplateMachines", "connect_proxmox");
                });

            modelBuilder.Entity("MoxControl.Connect.Proxmox.Models.Entities.ProxmoxMachine", b =>
                {
                    b.HasOne("MoxControl.Connect.Proxmox.Models.Entities.ProxmoxServer", "Server")
                        .WithMany("Machines")
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Server");
                });

            modelBuilder.Entity("MoxControl.Connect.Proxmox.Models.Entities.TemplateMachine", b =>
                {
                    b.HasOne("MoxControl.Connect.Proxmox.Models.Entities.ProxmoxServer", "Server")
                        .WithMany()
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Server");
                });

            modelBuilder.Entity("MoxControl.Connect.Proxmox.Models.Entities.ProxmoxServer", b =>
                {
                    b.Navigation("Machines");
                });
#pragma warning restore 612, 618
        }
    }
}
