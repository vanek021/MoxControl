@using MoxControl.Infrastructure.Extensions;
@using MoxControl.ViewModels.ServerViewModels;

@model ServerDetailsViewModel

@{
    ViewData["Title"] = "Детали сервера";
}

<div class="content d-flex flex-column flex-column-fluid" id="kt_content">
    <div class="container-xxl" id="kt_content_container">
        <partial name="_ServerDetailsNavigationPartial" model="@((Model.VirtualizationSystem, Model.Id))" />
        <div class="card mb-5 mb-xl-10">
            <!--begin::Card header-->
            <div class="card-header">
                <!--begin::Card title-->
                <div class="card-title m-0">
                    <h3 class="fw-bold m-0">Информация о сервере: @Model.Name <span class="@Model.Status.GetServerStatusColor()">@Model.Status.GetDisplayName()</span></h3>
                </div>
                <!--end::Card title-->
                <!--begin::Action-->
                <div class="card-toolbar">
                    <div class="d-flex justify-content-end">
                        @if (!string.IsNullOrEmpty(Model.WebUISource))
                        {
                            <a href="@Model.WebUISource" target="_blank" class="btn btn-primary btn-sm align-self-center me-3">
                                <span class="svg-icon svg-icon-sm">
                                    <!--begin::Svg Icon | path:C:\wamp64\www\keenthemes\themes\metronic\theme\html\demo1\dist/../src/media/svg/icons\Code\Terminal.svg-->
                                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="20px" height="20px" viewBox="0 0 24 24" version="1.1">
                                        <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                            <polygon points="0 0 24 0 24 24 0 24" />
                                            <path d="M3.70710678,15.7071068 C3.31658249,16.0976311 2.68341751,16.0976311 2.29289322,15.7071068 C1.90236893,15.3165825 1.90236893,14.6834175 2.29289322,14.2928932 L8.29289322,8.29289322 C8.67147216,7.91431428 9.28105859,7.90106866 9.67572463,8.26284586 L15.6757246,13.7628459 C16.0828436,14.1360383 16.1103465,14.7686056 15.7371541,15.1757246 C15.3639617,15.5828436 14.7313944,15.6103465 14.3242754,15.2371541 L9.03007575,10.3841378 L3.70710678,15.7071068 Z" fill="#000000" fill-rule="nonzero" transform="translate(9.000003, 11.999999) rotate(-270.000000) translate(-9.000003, -11.999999) " />
                                            <rect fill="#000000" opacity="0.3" x="12" y="17" width="10" height="2" rx="1" />
                                        </g>
                                    </svg><!--end::Svg Icon-->
                                </span>
                                Консоль
                            </a>
                        }
                        <a asp-controller="Server"
                           asp-action="Edit"
                           asp-route-virtualizationSystem="@Model.VirtualizationSystem"
                           asp-route-id="@Model.Id"
                           class="btn btn-primary btn-sm align-self-center me-3">
                            Редактировать
                        </a>
                    </div>
                </div>
                <!--end::Action-->
            </div>
            <!--begin::Card header-->
            <!--begin::Body-->
            <div class="card-body pt-5">
                <!--begin::Row-->
                <div class="row mb-6">
                    <!--begin::Label-->
                    <label class="col-lg-6 fw-semibold text-muted">Название сервера</label>
                    <!--end::Label-->
                    <!--begin::Col-->
                    <div class="col-lg-6">
                        <span class="fw-bold fs-6 text-gray-80">@Model.Name</span>
                    </div>
                    <!--end::Col-->
                </div>
                <!--end::Row-->
                <!--begin::Row-->
                <div class="row mb-6">
                    <!--begin::Label-->
                    <label class="col-lg-6 fw-semibold text-muted">Описание сервера</label>
                    <!--end::Label-->
                    <!--begin::Col-->
                    <div class="col-lg-6">
                        <span class="fw-bold fs-6 text-gray-80">@Model.Description</span>
                    </div>
                    <!--end::Col-->
                </div>
                <!--end::Row-->
                <!--begin::Input group-->
                <div class="row mb-6">
                    <!--begin::Label-->
                    <label class="col-lg-6 fw-semibold text-muted">Система виртуализации</label>
                    <!--end::Label-->
                    <!--begin::Col-->
                    <div class="col-lg-6 fv-row">
                        <span class="fw-bold text-gray-800 fs-6">@Model.VirtualizationSystem.GetDisplayName()</span>
                    </div>
                    <!--end::Col-->
                </div>
                <!--end::Input group-->
                <!--begin::Input group-->
                <div class="row mb-6">
                    <!--begin::Label-->
                    <label class="col-lg-6 fw-semibold text-muted">Адрес</label>
                    <!--end::Label-->
                    <!--begin::Col-->
                    <div class="col-lg-6 d-flex align-items-center">
                        <span class="fw-bold fs-6 text-gray-800 me-2">@Model.Host:@Model.Port</span>
                    </div>
                    <!--end::Col-->
                </div>
                <!--end::Input group-->
                <!--begin::Input group-->
                <div class="row mb-6">
                    <!--begin::Label-->
                    <label class="col-lg-6 fw-semibold text-muted">Предоставлены root данные</label>
                    <!--end::Label-->
                    <!--begin::Col-->
                    <div class="col-lg-6">
                        <span class="fw-bold fs-6 text-gray-800 me-2">@(Model.RootLogin is not null && Model.RootPassword is not null ? "Да" : "Нет")</span>
                    </div>
                    <!--end::Col-->
                </div>
                <!--end::Input group-->
                <!--begin::Input group-->
                <div class="row mb-6">
                    <!--begin::Label-->
                    <label class="col-lg-6 fw-semibold text-muted">
                        Тип авторизации
                    </label>
                    <!--end::Label-->
                    <!--begin::Col-->
                    <div class="col-lg-6">
                        <span class="fw-bold fs-6 text-gray-800">@Model.AuthorizationType.GetDisplayName()</span>
                    </div>
                    <!--end::Col-->
                </div>
                <!--end::Input group-->
                <!--begin::Input group-->
                <div class="row mb-6">
                    <!--begin::Label-->
                    <label class="col-lg-6 fw-semibold text-muted">Статус</label>
                    <!--begin::Label-->
                    <!--begin::Label-->
                    <div class="col-lg-6">
                        <span class="fw-bold fs-6 text-gray-800"><span class="@Model.Status.GetServerStatusColor()">@Model.Status.GetDisplayName()</span></span>
                    </div>
                    <!--begin::Label-->
                </div>
                <!--end::Input group-->
            </div>
            <!--end::Body-->
        </div>
        <div class="card mb-5 mb-xl-10">
            <!--begin::Header-->
            <div class="card-header">
                <!--begin::Card title-->
                <div class="card-title m-0">
                    <h3 class="fw-bold m-0">Ключевые показатели</h3>
                </div>
                <!--end::Card title-->
            </div>
            <!--end::Header-->
            <!--begin::Body-->
            <div class="card-body pt-5">
                <div class="d-flex justify-content-center" id="chartSpinner">
                    <div class="flex-column spinner-border text-primary">

                    </div>
                </div>
                <div class="row min-h-auto" style="min-height: 365px;" id="chartContainer">
                    <div class="col-lg-4" id="chart1">
                    </div>
                    <div class="col-lg-4" id="chart2">
                    </div>
                    <div class="col-lg-4" id="chart3">
                    </div>
                </div>
            </div>
            <!--end::Body-->
        </div>
        <div class="card mb-5 mb-xl-10">
            <!--begin::Card header-->
            <div class="card-header">
                <!--begin::Card title-->
                <div class="card-title m-0">
                    <h3 class="fw-bold m-0">Виртуальные машины</h3>
                </div>
                <!--end::Card title-->
                <!--begin::Action-->
                <a asp-controller="Machine" 
                        asp-action="Create" 
                        asp-route-virtualizationSystem="@Model.VirtualizationSystem" 
                        asp-route-serverId="@Model.Id" class="btn btn-sm btn-primary align-self-center">
                    Добавить ВМ
                </a>
                <!--end::Action-->
            </div>
            <!--begin::Card header-->
            <!--begin::Body-->
            <div class="card-body p-9">
                @if (Model.Machines.Any())
                {
                    <!--begin::Table container-->
                    <div id="kt_ecommerce_products_table_wrapper" class="dataTables_wrapper dt-bootstrap4 no-footer">
                        <div class="table-responsive">
                            <!--begin::Table-->
                            <table class="table table-row-dashed table-row-gray-200 align-middle gs-0 gy-4">
                                <!--begin::Table head-->
                                <thead>
                                    <tr class="text-start text-gray-400 fw-bold fs-7 text-uppercase gs-0">
                                        <th class="min-w-100px sorting_disabled">Название</th>
                                        <th class="w-200px sorting_disabled">Загрузка ЦП</th>
                                        <th class="w-200px sorting_disabled">Загрузка ОЗУ</th>
                                        <th class="w-200px sorting_disabled">Загрузка диска</th>
                                        <th class="text-end min-w-100px sorting_disabled">Статус</th>
                                    </tr>
                                </thead>
                                <!--end::Table head-->
                                <!--begin::Table body-->
                                <tbody>
                                    @foreach (var machine in Model.Machines)
                                    {
                                        <tr data-machine-row data-machine-id="@machine.Id" data-virtualizationSystem="@Model.VirtualizationSystem">
                                            <td>
                                                <a asp-controller="Machine" 
                                                        asp-action="Details" 
                                                        asp-route-virtualizationSystem="@Model.VirtualizationSystem" 
                                                        asp-route-id="@machine.Id" class="text-dark fw-bolder text-hover-primary mb-1 fs-6">
                                                    @machine.Name
                                                </a>
                                                <span class="text-muted fw-bold d-block">@machine.Description</span>
                                            </td>
                                            <td>
                                                <div data-machine-cpu class="d-flex flex-column w-100 me-2 mt-2">
                                                    <span class="text-gray-400 me-2 fw-boldest mb-2">CPU: -%</span>
                                                    <div class="progress bg-light-primary w-100 h-5px">
                                                        <div class="progress-bar bg-primary" role="progressbar" style="width: 0%"></div>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div data-machine-ram class="d-flex flex-column w-100 me-2 mt-2">
                                                    <span class="text-gray-400 me-2 fw-boldest mb-2">RAM: -%</span>
                                                    <div class="progress bg-light-warning w-100 h-5px">
                                                        <div class="progress-bar bg-warning" role="progressbar" style="width: 0%"></div>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div data-machine-hdd class="d-flex flex-column w-100 me-2 mt-2">
                                                    <span class="text-gray-400 me-2 fw-boldest mb-2">HDD: -%</span>
                                                    <div class="progress bg-light-info w-100 h-5px">
                                                        <div class="progress-bar bg-info" role="progressbar" style="width: 0%"></div>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="text-end pe-0">
                                                <span class="@machine.Status.GetMachineStatusColor()">@machine.Status.GetDisplayName()</span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                                <!--end::Table body-->
                            </table>
                        </div>
                    </div>
                    <!--end::Table-->
                }
                else
                {
                    <div class="card-px text-center py-2 my-2">
                        <h2 class="text-gray-400 fw-bold fs-3 fw-bold">Виртуальные машины не найдены</h2>
                    </div>
                }
            </div>
            <!--end::Body-->
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/radialBarCreator.js" asp-append-version="true"></script>
    <script src="~/js/machine/health.js"></script>
    <script type="text/javascript">
        chart1 = null;
        chart2 = null;
        chart3 = null;

        $(document).ready(async function () {
            await renderServerHealth();

            setInterval(renderServerHealth, 15000);
        });

        async function renderServerHealth() {
            var serverHealth = await getServerHealth();

            if (chart1 == null || chart2 == null || chart3 == null) {
                chart1 = createAndRenderRadialBar("chart1", "#00B2FF", serverHealth.cpuUsedPercent, "Загрузка CPU");
                chart2 = createAndRenderRadialBar("chart2", "#FFC700", serverHealth.memoryUsedPercent, "Загрузка RAM");
                chart3 = createAndRenderRadialBar("chart3", "#7239EA", serverHealth.hddUsedPercent, "Загрузка HDD");
            }
            else {
                updateRadialBar(chart1, "#00B2FF", serverHealth.cpuUsedPercent, "Загрузка CPU");
                updateRadialBar(chart2, "#FFC700", serverHealth.memoryUsedPercent, "Загрузка RAM");
                updateRadialBar(chart3, "#7239EA", serverHealth.hddUsedPercent, "Загрузка HDD");
            }

            var chartSpinner = $("#chartSpinner");
            
            if (chartSpinner)
                chartSpinner.remove();

            if (!serverHealth.isSuccess) {
                var txt = document.createElement("span");
                txt.classList.add("text-danger");
                txt.classList.add("text-center");
                txt.innerHTML = "Не удалось загрузить данные";
                $("#chartContainer").append(txt);
            }
        }

        async function getServerHealth() {
            const response = await fetch("/Server/GetServerHealth/@Html.Raw(Model.Id)?virtualizationSystem=@Html.Raw(Model.VirtualizationSystem.ToString())");
            
            if (response.ok) {
                const jsonData = await response.json();
                jsonData.isSuccess = true;
                return jsonData;
            }

            var emptyData = {
                cpuUsedPercent: 0,
                memoryUsedPercent: 0,
                hddUsedPercent: 0,
                isSuccess: false
            }
            return emptyData;
        }
    </script>
}