@using MoxControl.Infrastructure.Extensions;
@using MoxControl.ViewModels.ServerViewModels;

@model ServerDetailsViewModel

<div class="content d-flex flex-column flex-column-fluid" id="kt_content">
    <div class="container-xxl" id="kt_content_container">
        <partial name="_ServerDetailsNavigationPartial" model="@((Model.VirtualizationSystem, Model.Id))" />
        <div class="card mb-5 mb-xl-10">
            <!--begin::Card header-->
            <div class="card-header">
                <!--begin::Card title-->
                <div class="card-title m-0">
                    <h3 class="fw-bold m-0">Информация о сервере: @Model.Name <span class="@Model.Status.GetServerStatusColor()">@Model.Status.GetDisplayName()</span></h3>
                </div>
                <!--end::Card title-->
                <!--begin::Action-->
                <a asp-controller="Server" 
                        asp-action="Edit" 
                        asp-route-virtualizationSystem="@Model.VirtualizationSystem" 
                        asp-route-id="@Model.Id" 
                        class="btn btn-sm btn-primary align-self-center">
                    Редактировать
                </a>
                <!--end::Action-->
            </div>
            <!--begin::Card header-->
            <!--begin::Body-->
            <div class="card-body pt-5">
                <!--begin::Row-->
                <div class="row mb-6">
                    <!--begin::Label-->
                    <label class="col-lg-6 fw-semibold text-muted">Название сервера</label>
                    <!--end::Label-->
                    <!--begin::Col-->
                    <div class="col-lg-6">
                        <span class="fw-bold fs-6 text-gray-80">@Model.Name</span>
                    </div>
                    <!--end::Col-->
                </div>
                <!--end::Row-->
                <!--begin::Row-->
                <div class="row mb-6">
                    <!--begin::Label-->
                    <label class="col-lg-6 fw-semibold text-muted">Описание сервера</label>
                    <!--end::Label-->
                    <!--begin::Col-->
                    <div class="col-lg-6">
                        <span class="fw-bold fs-6 text-gray-80">@Model.Description</span>
                    </div>
                    <!--end::Col-->
                </div>
                <!--end::Row-->
                <!--begin::Input group-->
                <div class="row mb-6">
                    <!--begin::Label-->
                    <label class="col-lg-6 fw-semibold text-muted">Система виртуализации</label>
                    <!--end::Label-->
                    <!--begin::Col-->
                    <div class="col-lg-6 fv-row">
                        <span class="fw-bold text-gray-800 fs-6">@Model.VirtualizationSystem.GetDisplayName()</span>
                    </div>
                    <!--end::Col-->
                </div>
                <!--end::Input group-->
                <!--begin::Input group-->
                <div class="row mb-6">
                    <!--begin::Label-->
                    <label class="col-lg-6 fw-semibold text-muted">Адрес</label>
                    <!--end::Label-->
                    <!--begin::Col-->
                    <div class="col-lg-6 d-flex align-items-center">
                        <span class="fw-bold fs-6 text-gray-800 me-2">@Model.Host:@Model.Port</span>
                    </div>
                    <!--end::Col-->
                </div>
                <!--end::Input group-->
                <!--begin::Input group-->
                <div class="row mb-6">
                    <!--begin::Label-->
                    <label class="col-lg-6 fw-semibold text-muted">Предоставлены root данные</label>
                    <!--end::Label-->
                    <!--begin::Col-->
                    <div class="col-lg-6">
                        <span class="fw-bold fs-6 text-gray-800 me-2">@(Model.RootLogin is not null && Model.RootPassword is not null ? "Да" : "Нет")</span>
                    </div>
                    <!--end::Col-->
                </div>
                <!--end::Input group-->
                <!--begin::Input group-->
                <div class="row mb-6">
                    <!--begin::Label-->
                    <label class="col-lg-6 fw-semibold text-muted">
                        Тип авторизации
                    </label>
                    <!--end::Label-->
                    <!--begin::Col-->
                    <div class="col-lg-6">
                        <span class="fw-bold fs-6 text-gray-800">@Model.AuthorizationType.GetDisplayName()</span>
                    </div>
                    <!--end::Col-->
                </div>
                <!--end::Input group-->
                <!--begin::Input group-->
                <div class="row mb-6">
                    <!--begin::Label-->
                    <label class="col-lg-6 fw-semibold text-muted">Статус</label>
                    <!--begin::Label-->
                    <!--begin::Label-->
                    <div class="col-lg-6">
                        <span class="fw-bold fs-6 text-gray-800"><span class="@Model.Status.GetServerStatusColor()">@Model.Status.GetDisplayName()</span></span>
                    </div>
                    <!--begin::Label-->
                </div>
                <!--end::Input group-->
            </div>
            <!--end::Body-->
        </div>
        <div class="card mb-5 mb-xl-10">
            <!--begin::Header-->
            <div class="card-header">
                <!--begin::Card title-->
                <div class="card-title m-0">
                    <h3 class="fw-bold m-0">Ключевые показатели</h3>
                </div>
                <!--end::Card title-->
            </div>
            <!--end::Header-->
            <!--begin::Body-->
            <div class="card-body pt-5">
                <div class="d-flex justify-content-center" id="chartSpinner">
                    <div class="flex-column spinner-border text-primary">

                    </div>
                </div>
                <div class="row min-h-auto" style="min-height: 365px;">
                    <div class="col-lg-4" id="chart1">
                    </div>
                    <div class="col-lg-4" id="chart2">
                    </div>
                    <div class="col-lg-4" id="chart3">
                    </div>
                </div>
            </div>
            <!--end::Body-->
        </div>
        <div class="card mb-5 mb-xl-10">
            <!--begin::Card header-->
            <div class="card-header">
                <!--begin::Card title-->
                <div class="card-title m-0">
                    <h3 class="fw-bold m-0">Виртуальные машины</h3>
                </div>
                <!--end::Card title-->
                <!--begin::Action-->
                <a href="/jet-html-pro/?page=account/settings" class="btn btn-sm btn-primary align-self-center">Добавить ВМ</a>
                <!--end::Action-->
            </div>
            <!--begin::Card header-->
            <!--begin::Body-->
            <div class="card-body p-9">
                @if (Model.Machines.Any())
                {
                    <!--begin::Table container-->
                    <div id="kt_ecommerce_products_table_wrapper" class="dataTables_wrapper dt-bootstrap4 no-footer">
                        <div class="table-responsive">
                            <!--begin::Table-->
                            <table class="table table-row-dashed table-row-gray-200 align-middle gs-0 gy-4">
                                <!--begin::Table head-->
                                <thead>
                                    <tr class="text-start text-gray-400 fw-bold fs-7 text-uppercase gs-0">
                                        <th class="min-w-100px sorting_disabled">Название</th>
                                        <th class="w-200px sorting_disabled">Загрузка ЦП</th>
                                        <th class="w-200px sorting_disabled">Загрузка ОЗУ</th>
                                        <th class="w-200px sorting_disabled">Загрузка диска</th>
                                        <th class="text-end min-w-100px sorting_disabled">Статус</th>
                                    </tr>
                                </thead>
                                <!--end::Table head-->
                                <!--begin::Table body-->
                                <tbody>
                                    @foreach (var machine in Model.Machines)
                                    {
                                        <tr>
                                            <td>
                                                <a href="#" class="text-dark fw-bolder text-hover-primary mb-1 fs-6">@machine.Name</a>
                                                <span class="text-muted fw-bold d-block">@machine.Description</span>
                                            </td>
                                            <td>
                                                <div class="d-flex flex-column w-100 me-2 mt-2">
                                                    <span class="text-gray-400 me-2 fw-boldest mb-2">CPU: 65%</span>
                                                    <div class="progress bg-light-primary w-100 h-5px">
                                                        <div class="progress-bar bg-primary" role="progressbar" style="width: 65%"></div>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="d-flex flex-column w-100 me-2 mt-2">
                                                    <span class="text-gray-400 me-2 fw-boldest mb-2">RAM: 30%</span>
                                                    <div class="progress bg-light-warning w-100 h-5px">
                                                        <div class="progress-bar bg-warning" role="progressbar" style="width: 30%"></div>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="d-flex flex-column w-100 me-2 mt-2">
                                                    <span class="text-gray-400 me-2 fw-boldest mb-2">HDD: 20%</span>
                                                    <div class="progress bg-light-info w-100 h-5px">
                                                        <div class="progress-bar bg-info" role="progressbar" style="width: 20%"></div>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="text-end pe-0">
                                                <span class="@Model.Status.GetServerStatusColor()">@Model.Status.GetDisplayName()</span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                                <!--end::Table body-->
                            </table>
                        </div>
                    </div>
                    <!--end::Table-->
                }
                else
                {
                    <div class="card-px text-center py-2 my-2">
                        <h2 class="text-gray-400 fw-bold fs-3 fw-bold">Виртуальные машины не найдены</h2>
                    </div>
                }
            </div>
            <!--end::Body-->
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(async function () {
            var serverHealth = await getServerHealth();
            console.log(serverHealth);

            const chartSpinner = $("#chartSpinner");

            var options = {
                series: [0],
                chart: {
                    type: 'radialBar',
                    offsetY: -20,
                    sparkline: {
                        enabled: true
                    }
                },
                plotOptions: {
                    radialBar: {
                        inverseOrder: false,
                        startAngle: 0,
                        endAngle: 360,
                        offsetX: 0,
                        offsetY: 0,
                        hollow: {
                            margin: 5,
                            size: '50%',
                            background: 'transparent',
                            image: undefined,
                            imageWidth: 150,
                            imageHeight: 150,
                            imageOffsetX: 0,
                            imageOffsetY: 0,
                            imageClipped: true,
                            position: 'front',
                            dropShadow: {
                                enabled: false,
                                top: 0,
                                left: 0,
                                blur: 3,
                                opacity: 0.5
                            }
                        },
                        dataLabels: {
                            name: {
                                show: true,
                                fontSize: '16px',
                                fontFamily: undefined,
                                fontWeight: 600,
                                color: '#000000',
                                offsetY: -10
                            },
                            value: {
                                show: true,
                                fontSize: '14px',
                                fontFamily: undefined,
                                fontWeight: 400,
                                color: undefined,
                                offsetY: 16,
                                formatter: function (val) {
                                    return val + '%'
                                }
                            },
                        }
                    }
                },
                grid: {
                    padding: {
                        top: -10
                    }
                },
                fill: {
                    type: 'gradient',
                    colors: ['#00B2FF'],
                    gradient: {
                        shade: 'light',
                        shadeIntensity: 0,
                        inverseColors: false,
                        opacityFrom: 1,
                        opacityTo: 1,
                        stops: [0, 50, 53, 91]
                    },
                },
                labels: ['Average Results'],
            };

            options.series = [serverHealth.cpuUsedPercent];
            options.labels = ['Загрузка CPU'];

            var chart1 = new ApexCharts(document.querySelector("#chart1"), options);
            chart1.render();

            options.series = [serverHealth.memoryUsedPercent];
            options.fill.colors = ['#FFC700'];
            options.labels = ['Загрузка RAM'];

            var chart2 = new ApexCharts(document.querySelector("#chart2"), options);
            chart2.render();

            options.series = [serverHealth.hddUsedPercent];
            options.fill.colors = ['#7239EA'];
            options.labels = ['Загрузка HDD'];

            var chart3 = new ApexCharts(document.querySelector("#chart3"), options);
            chart3.render();

            chartSpinner.attr("style", "display: none !important");
        });

        async function getServerHealth() {
            const response = await fetch("/Server/GetServerHealth/@Html.Raw(Model.Id)?virtualizationSystem=${@Html.Raw(Model.VirtualizationSystem.ToString())}");
            
            if (response.ok) {
                const jsonData = await response.json();
                jsonData.isSuccess = true;
                return jsonData;
            }

            var emptyData = {
                cpuUsedPercent: 0,
                memoryUsedPercent: 0,
                hddUsedPercent: 0,
                isSuccess: false
            }
            return emptyData;
        }
    </script>
}